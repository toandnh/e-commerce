generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Order {
  id        Int         @id @default(autoincrement())
  createdAt DateTime    @default(now())
  status    String
  items     OrderItem[]
  total     Float
  userId    String?     @unique
  user      User?       @relation(fields: [userId], references: [id])
}

model OrderItem {
  id      Int    @id @default(autoincrement())
  title   String
  image   String
  price   Float
  amount  Int
  orderId Int?
  order   Order? @relation(fields: [orderId], references: [id])
}

model Item {
  id          Int         @id @default(autoincrement())
  createdAt   DateTime    @default(now())
  title       String      @unique
  image       String
  description String?
  price       Float       @default(12.99)
  amount      Int
  tags        ItemsTags[]
}

model Tag {
  id    Int         @id @default(autoincrement())
  name  String      @unique
  items ItemsTags[]
}

model ItemsTags {
  itemId Int
  tagId  Int
  item   Item @relation(fields: [itemId], references: [id])
  tag    Tag  @relation(fields: [tagId], references: [id])

  @@id([itemId, tagId])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  order         Order[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
